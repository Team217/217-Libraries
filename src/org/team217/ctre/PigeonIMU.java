package org.team217.ctre;

import com.ctre.phoenix.ErrorCode;

/**
 * Pigeon IMU Class (Extended). Class supports communicating over CANbus and over ribbon-cable (CAN Talon SRX).
 * 
 * @author ThunderChickens 217, Cross the Road Electronics
 */
public class PigeonIMU extends com.ctre.phoenix.sensors.PigeonIMU {
    protected double pitchOffset = 0;
    protected double rollOffset = 0;
    
    /**
     * Constructor for creating a {@code PigeonIMU} object.
     * 
     * @param deviceNumber
     *        The Device ID of the {@code PigeonIMU}
     */
    public PigeonIMU(int deviceNumber) {
        super(deviceNumber);
    }
    
    /** Returns the yaw (horizontal) angle of the {@code PigeonIMU}. */
    public double getAngle() {
        double[] ypr = new double[3];
        getYawPitchRoll(ypr);
        return -ypr[0];
    }

    /** Returns the pitch (front and back tip) angle of the {@code PigeonIMU}. */
    public double getPitch() {
        double[] ypr = new double[3];
        getYawPitchRoll(ypr);
        return -(ypr[1] - pitchOffset);
    }
    
    /** Returns the roll (left and right tip) angle of the {@code PigeonIMU}. */
    public double getRoll() {
        double[] ypr = new double[3];
        getYawPitchRoll(ypr);
        return ypr[2] - rollOffset;
    }

    /**
     * Sets the yaw (horizontal) angle of the {@code PigeonIMU}.
     * 
     * @param angleDeg
     *        The new angle in degrees
     */
    @Override
    public ErrorCode setYaw(double angleDeg) {
        return super.setYaw(-angleDeg);
    }

    /**
     * Sets the yaw (horizontal) angle of the {@code PigeonIMU}.
     * 
     * @param angleDeg
     *        The new angle in degrees
     * @param timeoutMs
     *        The timeout in milliseconds
     */
    @Override
    public ErrorCode setYaw(double angleDeg, int timeoutMs) {
        return super.setYaw(angleDeg, timeoutMs);
    }

    /**
     * Sets the pitch (front and back tip) angle of the {@code PigeonIMU}.
     * 
     * @param angleDeg
     *        The new angle in degrees
     */
    public void setPitch(double angleDeg) {
        double[] ypr = new double[3];
        getYawPitchRoll(ypr);
        pitchOffset = ypr[1] + angleDeg; // normally returns -ypr[1], so + angleDeg instead of -
    }
    
    /**
     * Sets the roll (left and right tip) angle of the {@code PigeonIMU}.
     * 
     * @param angleDeg
     *        The new angle in degrees
     */
    public void setRoll(double angleDeg) {
        double[] ypr = new double[3];
        getYawPitchRoll(ypr);
        rollOffset = ypr[2] - angleDeg;
    }
    
    /**
     * Resets the yaw (horizontal) angle of the {@code PigeonIMU} to 0.
     * 
     * @return
     *        Error Code generated by function. 0 indicates no error
     */
    public ErrorCode reset() {
        return setYaw(0, 0);
    }

    /** Resets the pitch (front and back tip) angle of the {@code PigeonIMU} to 0. */
    public void resetPitch() {
        setPitch(0);
    }

    /** Resets the roll (left and right tip) angle of the {@code PigeonIMU} to 0. */
    public void resetRoll() {
        setRoll(0);
    }
}
